!function(){"use strict";function a(a,c,e,f,g,h,i){function j(){b("getSession");var d=a.sessionEndpoint;return f.when(c.oneUrl("session",d).get()).then(function(a){b("getSession then");var c=a.userCtx;return c?n(c):void f.reject("User context not found in the session response")}).catch(function(a){return e.log("error in getSession:",a),f.reject(a)})}function k(){return f.reject("NOT_IMPLEMENTED")}function l(){return f.reject("NOT_IMPLEMENTED")}function m(){return f.reject("NOT_IMPLEMENTED")}function n(c){return b("decorating user",c),c.hasRole=function(a){if(angular.isArray(a)){var b=a.filter(function(a){return c.roles.indexOf(a)>-1});return!!b.length}if(angular.isString(a))return c.roles.indexOf(a)>-1},c.isAdmin=function(){return c.hasRole(a.adminRoles)},c}function o(){return b("getCurrentUser"),q?(b("available"),f.when(q)):(b("getting session"),j().then(function(a){return q=a}).catch(function(a){return b("error in `getCurrentUser` in the Couch auth service:",a),ehaCouchDbAuthService.trigger("unauthenticated"),f.reject(a)}))}function p(a){return function(){d||i.location.assign(a)}}var q,r=h.$new(!0);return{accounts:{add:k,update:l,remove:m},getSession:j,getCurrentUser:o,on:r.$on.bind(r),trigger:r.$broadcast.bind(r),isAuthenticated:function(){return q?j():f.reject()},logIn:p("/login"),logOut:p("/logout")}}var b=console.log,c=angular.module("eha.couchdb-auth.auth.service",["restangular","LocalForageModule","ng"]),d=!1;c.provider("ehaCouchDbAuthService",["$localForageProvider","ehaCouchDbAuthHttpInterceptorProvider","$httpProvider",function(b,c,e){function f(a){return a.charAt(0).toUpperCase()+a.slice(1)}function g(a){var b=[a];return a.indexOf("-")>-1?b=a.split("-"):a.indexOf("_")>-1&&(b=a.split("_")),b=b.map(f),b.join("")}function h(a,b,c){return a.getCurrentUser().then(function(d){return!d||d.isAdmin()||d.hasRole(c)?d:(a.trigger("unauthorized"),b.reject("unauthorized"))}).catch(function(c){if("unauthorized"===c)throw c;return a.trigger("unauthenticated"),b.reject("unauthenticated")})}var i={localStorageNamespace:"eha",localStorageStoreName:"auth",adminRoles:["_admin"],sessionEndpoint:"_session"};this.config=function(a){i=angular.extend(i,a),b.config({name:i.localStorageNamespace,storeName:i.localStorageStoreName}),a.interceptor&&(c.config({url:a.url,hosts:a.interceptor.hosts}),e.interceptors.push("ehaCouchDbAuthHttpInterceptor")),a.userRoles&&a.userRoles.forEach(function(a){var b="require"+g(a)+"User";this[b]=function(b,c){return h(b,c,[a])}}.bind(this))},this.requireAdminUser=function(a,b){return h(a,b,i.adminRoles)},this.requireAuthenticatedUser=function(a,b){return console.log("requireAuthenticatedUser"),a.getCurrentUser().then(function(a){return console.log("requireAuthenticatedUser returns successfully"),a}).catch(function(c){return console.log("requireAuthenticatedUser unauthenticated"),a.trigger("unauthenticated"),b.reject("unauthenticated")})},this.requireUserWithRoles=function(a){return function(b,c){return h(b,c,a)}},this.weAreRunningUnitTests=function(){d=!0},this.$get=["Restangular","$log","$q","$localForage","$rootScope","$window",function(b,c,d,e,f,g){var h=b.withConfig(function(a){a.setBaseUrl(i.url),i.defaultHttpFields&&a.setDefaultHttpFields(i.defaultHttpFields)});return new a(i,h,c,d,e,f,g)}]}]),"undefined"!=typeof module&&module.exports&&(module.exports=c)}(),function(){"use strict";function a(a,b){function c(b){var c=a.hosts.filter(function(a){return b.indexOf(a)>-1});return!!c.length}var d=b.get("$q");b.get("$log");return{request:function(a){if(c(a.url)){b.get("ehaCouchDbAuthService")}return d.when(a)},responseError:function(a){if(401===a.status&&c(a.config.url)){b.get("ehaCouchDbAuthService")}return d.reject(a)}}}var b=angular.module("eha.couchdb-auth.http-interceptor",[]);b.provider("ehaCouchDbAuthHttpInterceptor",function(){var b={};this.config=function(a){b=a},this.$get=["$injector",function(c){return new a(b,c)}]}),"undefined"!=typeof module&&module.exports&&(module.exports=b)}(),angular.module("eha.couchdb-auth.show-for-role.directive",[]).directive("ehaShowForRole",["ehaCouchDbAuthService","$animate","$parse","$q","$log",function(a,b,c,d,e){var f="ng-hide",g="ng-hide-animate";return{restrict:"A",link:function(h,i,j){function k(c){a.getCurrentUser().then(function(a){return a&&(a.hasRole(c)||a.isAdmin())?(b.removeClass(i,f,{tempClasses:g}),!0):d.reject("Role not found")}).catch(function(a){e.debug(a),b.addClass(i,f,{tempClasses:g})})}i.addClass("ng-hide");var l,m=c(j.ehaShowForRole)(h);if(angular.isArray(m))l=m;else{if(!angular.isString(m))throw Error("You must pass a string or an array of strings");l=[m]}k(l),a.on("authenticationStateChange",function(){k(l)})}}}]),angular.module("eha.couchdb-auth.show-authenticated.directive",[]).directive("ehaShowAuthenticated",["ehaCouchDbAuthService","$animate",function(a,b){var c="ng-hide",d="ng-hide-animate";return{restrict:"A",link:function(e,f){function g(){a.isAuthenticated().then(function(){b.removeClass(f,c,{tempClasses:d})}).catch(function(){b.addClass(f,c,{tempClasses:d})})}f.addClass("ng-hide"),g(),a.on("authenticationStateChange",g)}}}]),function(){"use strict";var a=angular.module("eha.couchdb-auth",["eha.couchdb-auth.http-interceptor","eha.couchdb-auth.auth.service","eha.couchdb-auth.show-for-role.directive","eha.couchdb-auth.show-authenticated.directive"]);"undefined"!=typeof module&&module.exports&&(module.exports=a)}();