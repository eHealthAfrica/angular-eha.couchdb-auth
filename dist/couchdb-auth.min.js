!function(){"use strict";function a(a,b,d,e,f,g,h){function i(){var c=a.url+"/"+a.sessionEndpoint;return e.when(b.oneUrl("session",c).get()).then(function(a){return a.userCtx?a:void e.reject("Session not found")})}function j(){return e.reject("NOT_IMPLEMENTED")}function k(){return e.reject("NOT_IMPLEMENTED")}function l(){return e.reject("NOT_IMPLEMENTED")}function m(b){return b.hasRole=function(a){var b=this;if(angular.isArray(a)){var c=a.filter(function(a){return b.roles.indexOf(a)>-1});return!!c.length}if(angular.isString(a))return this.roles.indexOf(a)>-1},b.isAdmin=function(){return this.hasRole(a.adminRoles)},b}function n(){return p?e.when(p):i().then(function(a){p=m(a)}).catch(function(a){return d.debug(a),e.reject(a)})}function o(a){return function(){c||h.location.assign(a)}}var p,q=g.$new(!0);return{accounts:{add:j,update:k,remove:l},getSession:i,getCurrentUser:n,on:q.$on.bind(q),trigger:q.$broadcast.bind(q),isAuthenticated:function(){return p?i():e.reject()},logIn:o("/login"),logOut:o("/logout")}}var b=angular.module("eha.couchdb-auth.auth.service",["restangular","LocalForageModule","ng"]),c=!1;b.provider("ehaCouchDbAuthService",["$localForageProvider","ehaCouchDbAuthHttpInterceptorProvider","$httpProvider",function(b,d,e){function f(a){return a.charAt(0).toUpperCase()+a.slice(1)}function g(a){var b=[a];return a.indexOf("-")>-1?b=a.split("-"):a.indexOf("_")>-1&&(b=a.split("_")),b=b.map(f),b.join("")}function h(a,b,c){return a.getCurrentUser().then(function(d){return!d||d.isAdmin()||d.hasRole(c)?d:(a.trigger("unauthorized"),b.reject("unauthorized"))}).catch(function(c){if("unauthorized"===c)throw c;return a.trigger("unauthenticated"),b.reject("unauthenticated")})}var i={localStorageNamespace:"eha",localStorageStoreName:"auth",adminRoles:["_admin"],sessionEndpoint:"_session"};this.config=function(a){i=angular.extend(i,a),b.config({name:i.localStorageNamespace,storeName:i.localStorageStoreName}),a.interceptor&&(d.config({url:a.url,hosts:a.interceptor.hosts}),e.interceptors.push("ehaCouchDbAuthHttpInterceptor")),a.userRoles&&a.userRoles.forEach(function(a){var b="require"+g(a)+"User";this[b]=function(b,c){return h(b,c,[a])}}.bind(this))},this.requireAdminUser=function(a,b){return h(a,b,i.adminRoles)},this.requireAuthenticatedUser=function(a,b){return a.getCurrentUser().then(function(a){return a}).catch(function(c){return a.trigger("unauthenticated"),b.reject("unauthenticated")})},this.requireUserWithRoles=function(a){return function(b,c){return h(b,c,a)}},this.weAreRunningUnitTests=function(){c=!0},this.$get=["Restangular","$log","$q","$localForage","$rootScope","$window",function(b,c,d,e,f,g){var h=b.withConfig(function(a){a.setBaseUrl(i.url),i.defaultHttpFields&&a.setDefaultHttpFields(i.defaultHttpFields)});return new a(i,h,c,d,e,f,g)}]}]),"undefined"!=typeof module&&module.exports&&(module.exports=b)}(),function(){"use strict";function a(a,b){function c(b){var c=a.hosts.filter(function(a){return b.indexOf(a)>-1});return!!c.length}var d=b.get("$q"),e=b.get("$log");return{request:function(a){if(c(a.url)){var f=b.get("ehaCouchDbAuthService");return f.getCurrentUser().then(function(b){return b&&b.bearerToken&&(a.headers.Authorization="Bearer "+b.bearerToken),a}).catch(function(b){return e.debug(b),a})}return d.when(a)},responseError:function(a){if(401===a.status&&c(a.config.url)){var e=b.get("ehaCouchDbAuthService");e.trigger("unauthenticated")}return d.reject(a)}}}var b=angular.module("eha.couchdb-auth.http-interceptor",[]);b.provider("ehaCouchDbAuthHttpInterceptor",function(){var b={};this.config=function(a){b=a},this.$get=["$injector",function(c){return new a(b,c)}]}),"undefined"!=typeof module&&module.exports&&(module.exports=b)}(),angular.module("eha.couchdb-auth.show-for-role.directive",[]).directive("ehaShowForRole",["ehaCouchDbAuthService","$animate","$parse","$q","$log",function(a,b,c,d,e){var f="ng-hide",g="ng-hide-animate";return{restrict:"A",link:function(h,i,j){function k(c){a.getCurrentUser().then(function(a){return a&&(a.hasRole(c)||a.isAdmin())?(b.removeClass(i,f,{tempClasses:g}),!0):d.reject("Role not found")}).catch(function(a){e.debug(a),b.addClass(i,f,{tempClasses:g})})}i.addClass("ng-hide");var l,m=c(j.ehaShowForRole)(h);if(angular.isArray(m))l=m;else{if(!angular.isString(m))throw Error("You must pass a string or an array of strings");l=[m]}k(l),a.on("authenticationStateChange",function(){k(l)})}}}]),angular.module("eha.couchdb-auth.show-authenticated.directive",[]).directive("ehaShowAuthenticated",["ehaCouchDbAuthService","$animate",function(a,b){var c="ng-hide",d="ng-hide-animate";return{restrict:"A",link:function(e,f){function g(){a.isAuthenticated().then(function(){b.removeClass(f,c,{tempClasses:d})}).catch(function(){b.addClass(f,c,{tempClasses:d})})}f.addClass("ng-hide"),g(),a.on("authenticationStateChange",g)}}}]),function(){"use strict";var a=angular.module("eha.couchdb-auth",["eha.couchdb-auth.http-interceptor","eha.couchdb-auth.auth.service","eha.couchdb-auth.show-for-role.directive","eha.couchdb-auth.show-authenticated.directive"]);"undefined"!=typeof module&&module.exports&&(module.exports=a)}();